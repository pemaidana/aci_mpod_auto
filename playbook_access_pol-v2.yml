---
- name: Configure ACI
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    apic_host: "sandboxapicdc.cisco.com"
    apic_user: "admin"
    apic_pass: "!v3G@!4@Y"
    
  tasks:
  - name: Reading Leaf Profiles and Interface Profiles
    read_csv:
      path: ../csv/leaf_int_pol.csv
    register: leaf_int_pols
    delegate_to: localhost
    tags:
     - sw_profile
     - int_profile
     - int_selector

  - name: Reading Policy Groups
    read_csv:
      path: ../csv/ifpolgrp.csv
    register: ifpolgroups
    delegate_to: localhost
    tags:
      - ifpolgrp

  - name: Reading VPC Domains
    read_csv:
      path: ../csv/vpc_domain.csv
    register: vpc_domains
    delegate_to: localhost
    tags:
      - vpc_domain

  - name: Configuring Leaf Profiles
    aci_switch_policy_leaf_profile:
      hostname: "{{ apic_host }}"
      username: "{{ apic_user }}"
      password: "{{ apic_pass }}"
      leaf_profile: "{{ item.sw_profile }}"
      state: "{{ item.sw_profile_state }}"
      validate_certs: false
    loop: "{{ leaf_int_pols.list | json_query('[].{sw_profile: sw_profile, sw_profile_state: sw_profile_state}')|unique }}"
    loop_control:
      label: "Configuring Leaf Profile \"{{ item.sw_profile }}\""
    tags:
      - sw_profile

  - name: Configuring Leaf Selector and Associating to Switch Profile
    aci_switch_leaf_selector:
      hostname: "{{ apic_host }}"
      username: "{{ apic_user }}"
      password: "{{ apic_pass }}"
      leaf_profile: "{{ item.sw_profile }}"
      leaf: "SWSEL_LEAF_{{ item.node_id }}"
      leaf_node_blk: "LEAF_{{ item.node_id }}"
      from: "{{ item.node_id }}"
      to: "{{ item.node_id }}"
      state: "present"
      validate_certs: false
    loop: "{{ leaf_int_pols.list | json_query('[].{node_id: node_id, sw_profile: sw_profile}')|unique }}"
    loop_control:
      label: "Configuring Leaf Selector for node \"{{ item.node_id }}\""
    tags:
      - sw_profile

  - name: Configuring Leaf Interface Profiles
    aci_interface_policy_leaf_profile:
      hostname: "{{ apic_host }}"
      username: "{{ apic_user }}"
      password: "{{ apic_pass }}"
      interface_profile:  "{{ item.leaf_int_profile }}"
      state: "{{ item.leaf_int_profile_state }}"
      validate_certs: false
    loop: "{{ leaf_int_pols.list | json_query('[].{leaf_int_profile: leaf_int_profile, leaf_int_profile_state: leaf_int_profile_state}')|unique }}"
    loop_control:
      label: "Configuring Leaf Interface Profile \"{{ item.leaf_int_profile }}\""
    tags:
      - int_profile

  - name: Associating Interface Profile to Switch Profile
    aci_interface_selector_to_switch_policy_leaf_profile:
      hostname: "{{ apic_host }}"
      username: "{{ apic_user }}"
      password: "{{ apic_pass }}"
      leaf_profile: "{{ item.sw_profile }}"
      interface_selector: "{{ item.leaf_int_profile }}"
      state: "present"
      validate_certs: false
    loop: "{{ leaf_int_pols.list | json_query('[].{leaf_int_profile: leaf_int_profile, sw_profile: sw_profile}')|unique }}"
    loop_control:
      label: "Associating Leaf Interface Profile \"{{ item.leaf_int_profile }}\" to Switch Profile \"{{ item.sw_profile }}\""
    tags:
      - int_profile

  - name: Configuring VPC Domains
    aci_switch_policy_vpc_protection_group:
      hostname: "{{ apic_host }}"
      username: "{{ apic_user }}"
      password: "{{ apic_pass }}"
      protection_group: "{{ item.vpc_domain_name }}"
      protection_group_id: "{{ item.vpc_id }}"
      switch_1_id: "{{ item.switch_1 }}"
      switch_2_id: "{{ item.switch_2 }}"
      state: "{{ item.state }}"
      validate_certs: false
    loop: "{{ vpc_domains.list }}"
    loop_control:
      label: "Configuring VPC Domain for Node \"{{ item.switch_1 }}\" and Node \"{{ item.switch_2 }}\""
    tags:
      - vpc_domain

  - name: Configuring Interface Policy Groups PC
    aci_interface_policy_leaf_policy_group:
      hostname: "{{ apic_host }}"
      username: "{{ apic_user }}"
      password: "{{ apic_pass }}"
      policy_group: "{{ item.policy_group_name }}"
      description: "{{ item.description }}"
      aep: "{{ item.aep }}"
      link_level_policy: "{{ item.link_level_policy }}"
      mcp_policy: "{{ item.mcp_policy }}"
      lag_type: "link"
      cdp_policy: "{{ item.cdp_policy }}"
      lldp_policy: "{{ item.lldp_policy }}"
      port_channel_policy: "{{ item.port_channel_policy }}"
      stp_interface_policy: "{{ item.stp_interface_policy }}"
      state: "{{ item.state }}"
      validate_certs: false
    when: item.lag_type == "pc"
    loop: "{{ ifpolgroups.list }}"
    loop_control:
      label: "Configuring Interface Policy type PC using name \"{{ item.policy_group_name }}\""
    tags:
      - ifpolgrp

  - name: Configuring Interface Policy Groups VPC
    aci_interface_policy_leaf_policy_group:
      hostname: "{{ apic_host }}"
      username: "{{ apic_user }}"
      password: "{{ apic_pass }}"
      policy_group: "{{ item.policy_group_name }}"
      description: "{{ item.description }}"
      aep: "{{ item.aep }}"
      link_level_policy: "{{ item.link_level_policy }}"
      mcp_policy: "{{ item.mcp_policy }}"
      lag_type: "node"
      cdp_policy: "{{ item.cdp_policy }}"
      lldp_policy: "{{ item.lldp_policy }}"
      port_channel_policy: "{{ item.port_channel_policy }}"
      stp_interface_policy: "{{ item.stp_interface_policy }}"
      state: "{{ item.state }}"
      validate_certs: false
    when: item.lag_type == "vpc"
    loop: "{{ ifpolgroups.list }}"
    loop_control:
      label: "Configuring Interface Policy type VPC using name \"{{ item.policy_group_name }}\""
    tags:
      - ifpolgrp

  - name: Configuring Interface Policy Groups Access
    aci_interface_policy_leaf_policy_group:
      hostname: "{{ apic_host }}"
      username: "{{ apic_user }}"
      password: "{{ apic_pass }}"
      policy_group: "{{ item.policy_group_name }}"
      description: "{{ item.description }}"
      aep: "{{ item.aep }}"
      link_level_policy: "{{ item.link_level_policy }}"
      mcp_policy: "{{ item.mcp_policy }}"
      lag_type: "leaf"
      cdp_policy: "{{ item.cdp_policy }}"
      lldp_policy: "{{ item.lldp_policy }}"
      stp_interface_policy: "{{ item.stp_interface_policy }}"
      state: "{{ item.state }}"
      validate_certs: false
    when: item.lag_type == "access"
    loop: "{{ ifpolgroups.list }}"
    loop_control:
      label: "Configuring Interface Policy type Access using name \"{{ item.policy_group_name }}\""
    tags:
      - ifpolgrp

  - name: Configuring Interface Selector and Associate Policy Groups
    aci_access_port_to_interface_policy_leaf_profile:
      hostname: "{{ apic_host }}"
      username: "{{ apic_user }}"
      password: "{{ apic_pass }}"
      interface_profile: "{{ item.leaf_int_profile }}"
      access_port_selector: "{{ item.int_selector }}"
      interface_type: "{{ item.interface_type }}"
      policy_group: "{{ item.policy_group_name }}"
      state: "{{ item.int_selector_state }}"
      validate_certs: false
    loop: "{{ leaf_int_pols.list }}"
    loop_control:
      label: "Configuring Interface Selector \"{{ item.int_selector }}\" and Associating Policy Group name \"{{ item.policy_group_name }}\""
    tags:
      - int_selector

  - name: Configuring Ports for Interface Selectors
    aci_access_port_block_to_access_port:
      hostname: "{{ apic_host }}"
      username: "{{ apic_user }}"
      password: "{{ apic_pass }}"
      interface_profile: "{{ item.leaf_int_profile }}"
      access_port_selector: "{{ item.int_selector }}"
      port_blk: "block2"
      port_blk_description: "{{ item.int_description }}"
      from_port: "{{ item.interface }}"
      to_port: "{{ item.interface }}"
      state: "present"
      validate_certs: false
    loop: "{{ leaf_int_pols.list }}"
    loop_control:
      label: "Configuring Port \"{{ item.interface }}\" and Associating to Interface Selector \"{{ item.int_selector }}\""
    tags:
      - int_selector